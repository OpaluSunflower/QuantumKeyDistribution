int losuj10(real rand)
{
if rand <= 0.5 {return 0;}
else {return 1;}
}
boolean sprawdzPodsluch(int odczytBolka,int qubitAlicji)
{
	return odczytBolka == qubitAlicji;
}
int rozmiarKlucza;
rozmiarKlucza = 10;
input "Podaj rozmiar klucza", rozmiarKlucza;

int bazaAlicji;
int bazaBolka;
int bazaEwy;
int vector wygenerowanyKlucz[rozmiarKlucza];
int vector przeslanyKlucz[rozmiarKlucza];

qureg rejestrKlucza[rozmiarKlucza];
int bazaProsta;
int bazaUkosna;
int polarrad;
int EvaMeasurement;
int BolekMeasurement;
int i = 0;
int recursionCounter = 0;
while i < rozmiarKlucza{
	reset; 
	bazaAlicji = losuj10(random());
	bazaProsta = losuj10(random());
	bazaUkosna = losuj10(random());
	if bazaProsta == 0
	{	
		polarrad = 0;
	}
	else
	{
		polarrad = 90;
	}
	print "Baza Prosta:", polarrad, "stopni";
	if bazaUkosna == 0
	{
		polarrad = 45;
	}
	else
	{
		polarrad = 135;
	}
	print "Baza Ukosna:", polarrad, "stopni";
	if bazaAlicji == 0
	{
		polarrad = 0;
		if bazaProsta == 1
		{
			Not(rejestrKlucza[i]);
			polarrad = 90;
		}
	print "Prawidlowa: Prosta, wyslano", polarrad, "stopni";
	wygenerowanyKlucz[i] = 0;
	}
	else
	{	polarrad = 45;
		if bazaUkosna == 1
		{
			polarrad = 135;
			Not(rejestrKlucza[i]);
		}
		H(rejestrKlucza[i]);
	print "Prawidlowa: Ukosna, wyslano", polarrad, "stopni";
	wygenerowanyKlucz[i] = 1;
	}

	bazaBolka = losuj10(random());

	if bazaBolka == 1
	{
	H(rejestrKlucza[i]);
	print "bazaBolka: Ukosna";
	}
	else
	{
		print "bazaBolka: Prosta";
	}

	measure rejestrKlucza[i], BolekMeasurement;
	print "Bolek zmierzył i mu wyszło:",BolekMeasurement;

	if bazaBolka == 0
	{
		if BolekMeasurement == 0
		{
			print "Bolek odczytal 0 stopni";
		}
		else
		{
			print "Bolek odczytal 90 stopni";
		}	

		if bazaProsta != BolekMeasurement
		{
			print "Wynik roztrzygajacy!";
			przeslanyKlucz[i] = 1;
			i=i+1;
		}
		else
		{
			print "Wynik nierotzrzygajacy";
		}
		if bazaAlicji == bazaBolka
		{
			if not sprawdzPodsluch(BolekMeasurement,bazaProsta)
			{
				print "WYKRYTO PODSLUCH!!!";
			}
		}	
	}
	else
	{
		if BolekMeasurement == 0
		{	
			print "Bolek odczytal 45 stopni";
		}
		else
		{
			print "Bolek odczytal 135 stopni";
		}
		if bazaUkosna != BolekMeasurement
		{
			print "Wynik roztrzygajacy!";
			przeslanyKlucz[i] = 0;
			i=i+1;
		}
		else
		{
			print "Wynik nieroztrzygajacy";
		}
		if bazaAlicji == bazaBolka
		{
			if not sprawdzPodsluch(BolekMeasurement,bazaUkosna)
			{
				print "WYKRYTO PODSLUCH!!!";
			}
		}
	}
	print "-----------------------------------------------------------------------------------------------";
	print "";
	recursionCounter = recursionCounter + 1;
}
print "Liczba wyslanych kubitow:", recursionCounter;
print "Otrzymany klucz:", przeslanyKlucz;
print "Klucz wygenerowany przez Alicje", wygenerowanyKlucz;                                                                       
